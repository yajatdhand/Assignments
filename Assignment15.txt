Session 1 : -
----------------

Q1.Create a Thread by extending the Thread class.

package com.acts.multithreading;

class MyThread extends Thread
{
	public void run()
	{
		for(int i = 0; i < 10; i++)
		System.out.println("Child Thread");
	}
}



public class ThreadEx {
	public static void main(String[] args) {
		
		MyThread t1 = new MyThread();
		t1.start();
		
		for(int i = 0; i < 10; i++)
		{
			System.out.println("Main Thread");
		}

	}

}


Q2.Create a Thread by Implements the Runnable Interface.

package com.acts.multithreading;

class MyThread1 implements Runnable
{
	public void run()
	{
		for(int i = 0; i < 10; i++)
		System.out.println("Child Thread using Runnable");
	}
}

public class ThreadEx1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		MyThread1 t1 = new MyThread1();
		Thread t = new Thread(t1);
		t.start();
		
		for(int i = 0; i < 10; i++)
			System.out.println("Main Thread");
	}

}


Q3.Create a Thread by extending Thread class set and get the name of thread.

package com.acts.multithreading;

class MyThread2 extends Thread
{
	public void run()
	{
		for(int i = 0; i < 10; i++)
		System.out.println("Name of Child Thread : "+Thread.currentThread().getName());
	}
}



public class ThreadEx2 {
	public static void main(String[] args) {
		
		MyThread2 t1 = new MyThread2();
		t1.start();
		
		for(int i = 0; i < 10; i++)
		{
			System.out.println("Name of Main Thread : "+Thread.currentThread().getName());
		}

	}

}


Q4.Create a Thread by extending Thread class set and get the priority of thread.

package com.acts.multithreading;

class MyThread3 extends Thread
{
	public void run()
	{
	System.out.println("Priority of child thread : "+Thread.currentThread().getPriority());
	}
}

public class PriorityEx {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
			
		MyThread3 t1 = new MyThread3();
		t1.start();
		System.out.println("Priority of main thread : "+Thread.currentThread().getPriority());
		
	}

}


Q5.Create a Thread by extending Thread class apply Yield Method.

package com.acts.multithreading;

class MyThread4 extends Thread
{
	public void run()
	{
	for(int i = 0; i < 10; i++)
	 { 
		System.out.println("child thread");
		Thread.yield();
	 }
	}
			
}

public class YieldEx {

	public static void main(String[] args) {
			
		MyThread4 t4 = new MyThread4();
		t4.start();
		for(int i = 0; i < 10; i++)
		{
			System.out.println("main thread");
		}
	}

}


Q6.Create a Thread by extending Thread class apply join Method.

package com.acts.multithreading;

class MyThread5 extends Thread
{
	
	public void run()
	{
		for(int i = 0; i < 3; i++)
		System.out.println(Thread.currentThread().getName());
	}
}

public class JoinEx {

	public static void main(String[] args) throws InterruptedException {
		
		MyThread5 t1 = new MyThread5();
		MyThread5 t2 = new MyThread5();
		MyThread5 t3 = new MyThread5();
		
		t1.setName("Thread 1");
		t2.setName("Thread 2");
		t2.setName("Thread 3");
		
		t1.start();
		
			t2.start();
			t2.join();
		
		t3.start();
		
	}

}


Q7.Create a Thread by extending Thread class apply sleep Method.

package com.acts.multithreading;

////class MyThread5 extends Thread
//{
//	
//}

public class SleepEx {

	public static void main(String[] args) throws InterruptedException {
		
		for(int i = 0; i < 10; i++)
		{
			System.out.println("Yo Boys ");
			Thread.sleep(1000);
		}

	}

}
